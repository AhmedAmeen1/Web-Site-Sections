import React from 'react';

interface Section {
  _id: string;
  type: string;
  content: string;
}

interface SectionCardProps {
  section: Section;
  index: number;
  isSubmitted: boolean;
}

export default function SectionCard({ section, index, isSubmitted }: SectionCardProps) {
  const getSectionIcon = (type: string) => {
    switch (type.toLowerCase()) {
      case 'hero':
        return '🚀';
      case 'about':
        return 'ℹ️';
      case 'contact':
        return '📞';
      case 'services':
        return '⚙️';
      case 'testimonials':
        return '💬';
      case 'features':
        return '✨';
      case 'pricing':
        return '💰';
      case 'faq':
        return '❓';
      default:
        return '📄';
    }
  };

  const getSectionColor = (type: string) => {
    switch (type.toLowerCase()) {
      case 'hero':
        return 'from-blue-500 to-purple-600';
      case 'about':
        return 'from-green-500 to-teal-600';
      case 'contact':
        return 'from-orange-500 to-red-600';
      case 'services':
        return 'from-purple-500 to-pink-600';
      case 'testimonials':
        return 'from-yellow-500 to-orange-600';
      case 'features':
        return 'from-indigo-500 to-blue-600';
      case 'pricing':
        return 'from-emerald-500 to-green-600';
      case 'faq':
        return 'from-gray-500 to-slate-600';
      default:
        return 'from-gray-500 to-gray-600';
    }
  };

  return (
    <div
      className="group bg-white/80 dark:bg-slate-800/80 backdrop-blur-sm rounded-2xl shadow-lg border border-white/20 p-6 hover:shadow-xl transition-all duration-300 transform hover:-translate-y-1 hover:scale-105"
      style={{
        animationDelay: `${index * 100}ms`,
        animation: isSubmitted ? 'slideInUp 0.6s ease-out forwards' : 'none',
        opacity: isSubmitted ? 0 : 1
      }}
    >
      <div className="flex items-center mb-4">
        <div className={`w-12 h-12 rounded-xl bg-gradient-to-r ${getSectionColor(section.type)} flex items-center justify-center text-2xl mr-3 shadow-lg`}>
          {getSectionIcon(section.type)}
        </div>
        <div className="flex-1">
          <h3 className="font-bold text-lg text-gray-800 dark:text-gray-200 capitalize">
            {section.type}
          </h3>
          <p className="text-sm text-gray-500 dark:text-gray-400">
            Section {index + 1}
          </p>
        </div>
        <div className="opacity-0 group-hover:opacity-100 transition-opacity duration-200">
          <button className="p-2 rounded-lg bg-gray-100 dark:bg-slate-700 hover:bg-gray-200 dark:hover:bg-slate-600 transition-colors">
            <span className="text-gray-600 dark:text-gray-300">⋮</span>
          </button>
        </div>
      </div>
      
      <div className="bg-gray-50 dark:bg-slate-700/50 rounded-xl p-4 border border-gray-100 dark:border-slate-600">
        <p className="text-gray-700 dark:text-gray-300 text-sm leading-relaxed">
          {section.content}
        </p>
      </div>

      <div className="mt-4 flex items-center justify-between text-xs text-gray-500 dark:text-gray-400">
        <span>Generated by AI</span>
        <span className="flex items-center space-x-1">
          <div className="w-2 h-2 bg-green-500 rounded-full animate-pulse"></div>
          <span>Ready</span>
        </span>
      </div>
    </div>
  );
} 